{
	"info": {
		"_postman_id": "8f502f41-5b84-44bb-981d-662d0db601a7",
		"name": "9-Transferences",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "16623392"
	},
	"item": [
		{
			"name": "Realizar una transferencia - saldo insuficiente",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							" postman.setEnvironmentVariable(\"date\", new Date());"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check the active environment\", () => {\r",
							"let environment = pm.collectionVariables.get(\"environment\");\r",
							"  pm.expect(pm.environment.name).to.eql(pm.environment.name);\r",
							"});\r",
							"pm.test (\"New User\", function(){\r",
							"    pm.response.to.have.status(410);\r",
							"});\r",
							"pm.test(\"Check response message\", () =>{\r",
							"    let response = pm.response.text();\r",
							"    pm.expect(response).to.be.equals(\"Saldo insuficiente\")\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{Token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \r\n    \"accountOriginId\": 2,\r\n    \"accountDestinyId\": 1,\r\n    \"amount\": 15000.0,\r\n    \"date\": \"2022-11-20T00:00:00.000+00:00\",\r\n    \"detail\": \"Alquiler\",\r\n    \"type\": \"Debito\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/account/{{idAccount}}/transferences",
					"host": [
						"{{host}}"
					],
					"path": [
						"account",
						"{{idAccount}}",
						"transferences"
					]
				}
			},
			"response": []
		},
		{
			"name": "Realizar una transferencia exitosa",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							" postman.setEnvironmentVariable(\"date\", new Date());"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check the active environment\", () => {\r",
							"let environment = pm.collectionVariables.get(\"environment\");\r",
							"  pm.expect(pm.environment.name).to.eql(pm.environment.name);\r",
							"});\r",
							"pm.test(\"Content-Type header is present\", () => {\r",
							"  pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"Content-Type header is application/json\", () => {\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
							"});\r",
							"pm.test (\"Status 200\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Not null values\", function () {\r",
							"    let response = pm.response.json();\r",
							"    pm.expect(response.id!==null ||\r",
							"        response.accountId !== null ||\r",
							"        response.type !== null ).to.be.true\r",
							"});\r",
							"pm.test(\"Not empty response\", function() {\r",
							"    response = pm.response.json()\r",
							"    \r",
							"    pm.expect(response.length)>0\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Validate not to be undefined\", function () {\r",
							"   \r",
							"    let response = pm.response.json();\r",
							"    for(let i=0; i < response.length; i++){\r",
							"        pm.expect(response[i]).not.to.be.undefined   \r",
							"    }\r",
							"   });\r",
							"\r",
							"pm.test(\"Validate ID is a number\",function(){\r",
							"    let response = pm.response.json();\r",
							"   for (let i=0; i<response.length;i++){\r",
							"    pm.expect(response[i].id).to.be.a(\"number\")\r",
							"   }\r",
							"})\r",
							"pm.test(\"Validate detail to be string\", function(){\r",
							"    let response = pm.response.json();\r",
							"    for (let i=0; i<response.length;i++){\r",
							"    pm.expect(response[i].detail).to.be.a(\"string\")\r",
							"   }\r",
							"})\r",
							"pm.test(\"Validate type to be string\", function(){\r",
							"    let response = pm.response.json();\r",
							"    for (let i=0; i<response.length;i++){\r",
							"    pm.expect(response[i].type).to.be.a(\"string\")\r",
							"   }\r",
							"})\r",
							"pm.test(\"Validate accountOriginId to be a number\", function(){\r",
							"    let response = pm.response.json();\r",
							"    for (let i=0; i<response.length;i++){\r",
							"    pm.expect(response[i].accountOriginId).to.be.a(\"number\")\r",
							"   }\r",
							"})\r",
							"pm.test(\"Validate accountDestinyId to be a number\", function(){\r",
							"    let response = pm.response.json();\r",
							"    for (let i=0; i<response.length;i++){\r",
							"    pm.expect(response[i].accountDestinyId).to.be.a(\"number\")\r",
							"   }\r",
							"})\r",
							"pm.test(\"Validate amount to be a number\", function(){\r",
							"    let response = pm.response.json();\r",
							"    for (let i=0; i<response.length;i++){\r",
							"    pm.expect(response[i].amount).to.be.a(\"number\")\r",
							"   }\r",
							"})\r",
							"pm.test(\"Validate date to be a string\", function(){\r",
							"    let response = pm.response.json();\r",
							"    for (let i=0; i<response.length;i++){\r",
							"    pm.expect(response[i].date).to.be.a(\"String\")\r",
							"   }\r",
							"})\r",
							"pm.test(\"Validate response to be an object\", function(){\r",
							"    let response = pm.response.json();\r",
							"    for (let i=0; i<response.length;i++){\r",
							"    pm.expect(response[i]).to.be.an(\"object\")\r",
							"   }\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{Token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \r\n    \"accountOriginId\": 2,\r\n    \"accountDestinyId\": 9,\r\n    \"amount\": 1.0,\r\n    \"date\": \"2022-12-25\",\r\n    \"detail\": \"Alquiler\",\r\n    \"type\": \"Debito\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/account/{{idAccount}}/transferences",
					"host": [
						"{{host}}"
					],
					"path": [
						"account",
						"{{idAccount}}",
						"transferences"
					]
				}
			},
			"response": []
		},
		{
			"name": "Realizar una transferencia - amount null",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							" postman.setEnvironmentVariable(\"date\", new Date());"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check the active environment\", () => {\r",
							"let environment = pm.collectionVariables.get(\"environment\");\r",
							"  pm.expect(pm.environment.name).to.eql(pm.environment.name);\r",
							"});\r",
							"pm.test (\"New User\", function(){\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{Token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \r\n    \"accountOriginId\": 2,\r\n    \"accountDestinyId\": 1,\r\n    \"amount\":  null,\r\n    \"date\": \"2022-12-25\",\r\n    \"detail\": \"Alquiler\",\r\n    \"type\": \"Debito\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/account/{{idAccount}}/transferences",
					"host": [
						"{{host}}"
					],
					"path": [
						"account",
						"{{idAccount}}",
						"transferences"
					]
				}
			},
			"response": []
		},
		{
			"name": "Realizar una transferencia - account destiny null",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							" postman.setEnvironmentVariable(\"date\", new Date());"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check the active environment\", () => {\r",
							"let environment = pm.collectionVariables.get(\"environment\");\r",
							"  pm.expect(pm.environment.name).to.eql(pm.environment.name);\r",
							"});\r",
							"pm.test (\"New User\", function(){\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"pm.test(\"Check response message\", () =>{\r",
							"    let response = pm.response.text();\r",
							"    pm.expect(response).to.be.equals(\"No existe la cuenta destino\")\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{Token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \r\n    \"accountOriginId\": 2,\r\n    \"accountDestinyId\": null,\r\n    \"amount\": 150.0,\r\n    \"date\": \"2022-12-25\",\r\n    \"detail\": \"Alquiler\",\r\n    \"type\": \"Debito\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/account/{{idAccount}}/transferences",
					"host": [
						"{{host}}"
					],
					"path": [
						"account",
						"{{idAccount}}",
						"transferences"
					]
				}
			},
			"response": []
		},
		{
			"name": "Realizar una transferencia - account origin null",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							" postman.setEnvironmentVariable(\"date\", new Date());"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check the active environment\", () => {\r",
							"let environment = pm.collectionVariables.get(\"environment\");\r",
							"  pm.expect(pm.environment.name).to.eql(pm.environment.name);\r",
							"});\r",
							"pm.test (\"New User\", function(){\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{Token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \r\n    \"accountOriginId\": null,\r\n    \"accountDestinyId\": 1,\r\n    \"amount\": 150.0,\r\n    \"date\": \"2022-12-25\",\r\n    \"detail\": \"Alquiler\",\r\n    \"type\": \"Debito\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/account/{{idAccount}}/transferences",
					"host": [
						"{{host}}"
					],
					"path": [
						"account",
						"{{idAccount}}",
						"transferences"
					]
				}
			},
			"response": []
		},
		{
			"name": "Realizar una transferencia - cargar  saldo desde tarjeta",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							" postman.setEnvironmentVariable(\"date\", new Date());"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check the active environment\", () => {\r",
							"let environment = pm.collectionVariables.get(\"environment\");\r",
							"  pm.expect(pm.environment.name).to.eql(pm.environment.name);\r",
							"});\r",
							"pm.test (\"New User\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{Token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \r\n    \"cardId\" : 9,\r\n    \"amount\": 500\r\n  \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/account/{{idAccount}}/transferenceAccount",
					"host": [
						"{{host}}"
					],
					"path": [
						"account",
						"{{idAccount}}",
						"transferenceAccount"
					]
				}
			},
			"response": []
		},
		{
			"name": "Realizar una transferencia sin Token",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							" postman.setEnvironmentVariable(\"date\", new Date());"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check the active environment\", () => {\r",
							"let environment = pm.collectionVariables.get(\"environment\");\r",
							"  pm.expect(pm.environment.name).to.eql(pm.environment.name);\r",
							"});\r",
							"pm.test(\"Status code is 401\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{empty_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \r\n      \"accountOriginId\": 2,\r\n    \"accountDestinyId\": 1,\r\n    \"amount\": 150.0,\r\n    \"date\": \"2022-12-25\",\r\n    \"detail\": \"Alquiler\",\r\n    \"type\": \"Debito\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/account/{{idAccount}}/transferences",
					"host": [
						"{{host}}"
					],
					"path": [
						"account",
						"{{idAccount}}",
						"transferences"
					]
				}
			},
			"response": []
		},
		{
			"name": "Realizar una transferencia con Token inválido",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							" postman.setEnvironmentVariable(\"date\", new Date());"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"\r",
							"pm.test(\"Check the active environment\", () => {\r",
							"let environment = pm.collectionVariables.get(\"environment\");\r",
							"  pm.expect(pm.environment.name).to.eql(pm.environment.name);\r",
							"});\r",
							"pm.test(\"Status code is 401\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token_fake}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token_fake}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \r\n   \"accountOriginId\": 2,\r\n    \"accountDestinyId\": 1,\r\n    \"amount\": 150.0,\r\n    \"date\": \"2022-12-25\",\r\n    \"detail\": \"Alquiler\",\r\n    \"type\": \"Debito\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/account/{{idAccount}}/transferences",
					"host": [
						"{{host}}"
					],
					"path": [
						"account",
						"{{idAccount}}",
						"transferences"
					]
				}
			},
			"response": []
		}
	]
}